{"version":3,"sources":["assets/rewind.svg","assets/soundcloud.svg","assets/sun_moon.svg","assets/github2.svg","assets/music_finder.svg","assets/play.svg","assets/pause.svg","assets/default_artwork.png","Components/UI/DarkModeToggle/DarkModeToggle.js","Components/Navigation/Navbar/NavItems/NavItems.js","Components/Navigation/Navbar/NavTitle/NavTitle.js","Components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","hoc/Auxiliar/Auxiliar.js","Components/Logo/Logo.js","context/providers.js","Components/Navigation/Navbar/Search/Search.js","Components/Navigation/Navbar/Navbar.js","Components/UI/Backdrop/Backdrop.js","Components/Navigation/SideDrawer/SideDrawer.js","util/utility.js","Components/UI/ControlIcon/ControlIcon.js","Components/Song/SongMedia/SongMedia.js","Components/Song/Song.js","Components/UI/Spinner/Spinner.js","config/config.js","Components/Player/ProgressBar/ProgressBar.js","Components/Player/Timer/Timer.js","Components/Player/Player.js","Containers/SongList/SongList.js","Components/UI/Modal/Modal.js","Components/UI/Button/Button.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DarkModeToggle","props","useState","darkmode","setDarkmode","themeToggle","document","getElementById","classList","replace","localStorage","setItem","useEffect","JSON","parse","getItem","text","className","id","type","onChange","htmlFor","src","toggleThemeIcon","alt","NavItems","desktopOnly","href","soundCloudLogo","gitHubLogo","navTitle","title","DrawerToggle","value","onClick","toggleDrawer","aux","children","Logo","musicFinderLogo","ContextData","createContext","StateProvider","store","Provider","Search","inputField","setInputField","useContext","setInput","onSubmit","e","preventDefault","submitSearch","placeholder","event","target","bind","Navbar","setTitle","inputValue","backdrop","show","clicked","sideDrawer","attachedClasses","open","closed","join","millisToMinutesAndSeconds","millis","minutes","Math","floor","seconds","toFixed","fetchSongs","url","fetch","then","response","json","data","catch","error","Error","updateObject","oldObject","updatedProperties","initialState","songs","input","nextUrl","selectedSong","nextSong","previousSong","reproductionListReducer","state","action","concat","console","log","selectedSongIndex","indexOf","ControlIcon","callAll","fns","args","forEach","fn","playIcon","class","pauseIcon","pauseSong","playSong","SongMedia","active","setActive","highlightSong","track","controlIcon","isPlaying","user","username","duration","genre","Song","highlightedSong","useRef","songImage","artwork_url","avatar_url","includes","default_artwork","ref","gsap","to","current","outline","boxShadow","scale","force3D","spinner","CLIENT_ID_QUERY","ProgressBar","songDuration","currentTime","onProgressBarChange","React","currentPercentage","setCurrentPercentage","newCurrentTime","clientX","offsetWidth","onPogressBarClickedHandle","style","width","Timer","Player","player","Audio","audio","timer","setTimer","setCurrentTime","volumeLevel","setVolumeLevel","y","onended","volume","setInterval","clearInterval","wasPlaying","paused","ended","stream_url","load","play","pause","useCallback","seekIcon","step","min","max","SongList","handleError","bottom","setBottom","loading","setLoading","setIsPlaying","useReducer","dispatch","useReproductionList","reproductionList","previousReproductionList","usePrevious","songCardList","playSongHandler","pauseSongHandler","TRACKS_BASE_URL","collection","window","addEventListener","func","delay","inDebounce","clearTimeout","setTimeout","apply","arguments","debounce","listenToScroll","removeEventListener","next_href","useLayoutEffect","length","filter","item","index","opacity","winScroll","body","scrollTop","documentElement","height","scrollHeight","clientHeight","map","song","key","element","modal","modalClosed","transform","button","btnType","App","setToggleDrawer","setError","errorMessage","location","reload","onErrorMessageClosed","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fd0fd1f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rewind.0475bf17.svg\";","module.exports = __webpack_public_path__ + \"static/media/soundcloud.fa27dd99.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun_moon.cbec9163.svg\";","module.exports = __webpack_public_path__ + \"static/media/github2.9407832c.svg\";","module.exports = __webpack_public_path__ + \"static/media/music_finder.3ce52b7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.aef9a910.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.5b003f17.svg\";","module.exports = __webpack_public_path__ + \"static/media/default_artwork.a0cb384e.png\";","import React, {useState, useEffect } from 'react';\r\nimport toggleThemeIcon from '../../../assets/sun_moon.svg';\r\nimport './DarkModeToggle.scss';\r\n\r\n//Component used to change a theme via adding or removing a class\r\n//Class to append \r\n\r\nconst DarkModeToggle = (props) => {\r\n  const [darkmode, setDarkmode] = useState(false);\r\n\r\n  const themeToggle = () => {\r\n    if (!darkmode) {\r\n      document\r\n        .getElementById(\"root\")\r\n        .classList.replace(\"theme-light\", \"theme-dark\");\r\n    } else {\r\n      document\r\n        .getElementById(\"root\")\r\n        .classList.replace(\"theme-dark\", \"theme-light\");\r\n    }\r\n    setDarkmode(!darkmode);\r\n    //The status of the Darkmode is saved in localstorage\r\n    localStorage.setItem(\"DarkMode\", !darkmode);\r\n  };\r\n  \r\n  //If the application has been used before, the status of the theme has been saved. Check for existence\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem(\"DarkMode\")) === true) {\r\n      themeToggle();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let text = props.text ? (\r\n    <span className=\"ToggleThemeText\">{props.text}</span>\r\n  ) : null;\r\n  return (\r\n    <div className=\"ToggleContainer\">\r\n      <input\r\n        className=\"CheckToggle\"\r\n        id=\"toggleTheme\"\r\n        type=\"checkbox\"\r\n        onChange={themeToggle}\r\n      />\r\n      <label className=\"ToggleTheme\" htmlFor=\"toggleTheme\">\r\n        <img\r\n          className=\"ToggleThemeIcon\"\r\n          src={toggleThemeIcon}\r\n          alt=\"Switch Theme\"\r\n        />\r\n        {text}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default DarkModeToggle;","import React from 'react';\r\nimport './NavItems.scss'; \r\nimport soundCloudLogo from '../../../../assets/soundcloud.svg';\r\nimport DarkModeToggle from '../../../UI/DarkModeToggle/DarkModeToggle';\r\nimport gitHubLogo from '../../../../assets/github2.svg';\r\n\r\nconst NavItems = (props) => {\r\n\r\n  return (\r\n    <ul className={props.desktopOnly ? 'NavItems DesktopOnly' : 'NavItems'}>\r\n\r\n      <li className={'NavItem'}>\r\n        <DarkModeToggle text='Toggle Theme'/>\r\n      </li>\r\n      <li className={'NavItem'}>\r\n        <a className={'NavItemLink'} href='https://soundcloud.com'>\r\n          <img className={'NavItemImg'} src={soundCloudLogo} alt='Sound Cloud' />\r\n          <span className={'NavItemText'}>Soundcloud</span>\r\n        </a>\r\n      </li>\r\n      <li className={'NavItem'}>\r\n        <a className={'NavItemLink'} href='https://github.com/Fispe/music-box-v2'>\r\n          <img className={'NavItemImg'} src={gitHubLogo} alt='GitHub' />\r\n          <span className={'NavItemText'}>GitHub</span>\r\n        </a>\r\n      </li>\r\n\r\n    </ul>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default NavItems;","import React from 'react';\r\nimport './NavTitle.scss';\r\n\r\nconst navTitle = (props) => {\r\n\r\n  return (\r\n    <div className={'NavTitle'}>\r\n      <h1 className={'TitleText'}>\r\n        {props.title}\r\n      </h1>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default navTitle;","import React from 'react';\r\nimport './DrawerToggle.scss';\r\n\r\nconst DrawerToggle = (props) => {\r\n\r\n  return (\r\n    <div className={'DrawerToggle'} >\r\n      <input type=\"checkbox\" id=\"drawerToggle\" className={'DrawerToggleCheckbox'} value=\"\"/>\r\n      <label onClick={props.toggleDrawer} className={'DrawerToggleLabel'} htmlFor=\"drawerToggle\">\r\n        <span className={'DrawerToggleIcon'}>\r\n          &nbsp;\r\n        </span>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawerToggle;","const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport musicFinderLogo from '../../assets/music_finder.svg';\r\nimport './Logo.scss';\r\nimport Aux from '../../hoc/Auxiliar/Auxiliar';\r\n\r\n\r\nconst Logo = (props) => {\r\n  return (\r\n    <Aux>\r\n      <div className={\"Logo\"}>\r\n        <img src={musicFinderLogo} alt=\"Music Finder\" className={\"LogoImg\"} />\r\n      </div>\r\n      <h3 className={props.desktopOnly ? \"LogoText DesktopOnly\" : \"LogoText\"}>\r\n        Music Finder\r\n      </h3>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default Logo;","import React, {createContext, useState} from 'react'\r\n\r\nexport const ContextData = createContext()\r\n\r\nconst StateProvider = ({children}) => {\r\nconst [input, setInput ] = useState(null)\r\n\r\nconst store = [input, setInput]\r\n\r\n\r\n  return (  \r\n    <ContextData.Provider value={store}>\r\n      {children}\r\n    </ContextData.Provider>\r\n  )\r\n}\r\n\r\nexport default StateProvider","import React, { useState, useContext } from 'react';\r\nimport {ContextData} from '../../../../context/providers'\r\nimport './Search.scss';\r\n\r\n\r\nconst Search = (props) => {\r\n\r\n  const [inputField, setInputField] = useState(null)\r\n  const [input, setInput] = useContext(ContextData);\r\n\r\n  const handleInputChange = (event) =>{\r\n    setInputField(event.target.value);\r\n  }\r\n\r\n  const submitSearch = (e) => {\r\n    e.preventDefault();\r\n    props.submitSearch(inputField);\r\n    setInput(inputField)\r\n  }\r\n\r\n  return (\r\n    <form className={\"Search\"} onSubmit={(e) => submitSearch(e)}>\r\n      <input\r\n        className={\"SearchInput\"}\r\n        type=\"text\"\r\n        placeholder=\"Search music...\"\r\n        onChange={handleInputChange.bind(this)}\r\n      ></input>\r\n    </form>\r\n  );\r\n  \r\n}\r\nexport default Search;","import React, { useState } from 'react';\r\nimport NavItems from './NavItems/NavItems';\r\nimport NavTitle from './NavTitle/NavTitle';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nimport Logo from '../../Logo/Logo';\r\nimport Search from './Search/Search';\r\nimport './Navbar.scss';\r\n\r\nconst Navbar = props => {\r\n\r\n  const [title, setTitle] = useState('Featured Tracks');\r\n  \r\n \r\n\r\n  const submitSearch = (inputValue) =>{\r\n    setTitle('Showing results for: ' + inputValue);\r\n  }\r\n\r\n  return (\r\n    <div className={\"Navbar\"}>\r\n      <DrawerToggle toggleDrawer={props.toggleDrawer}></DrawerToggle>\r\n      <Logo desktopOnly={true}/>\r\n      <div className={\"SearchTitle\"}>\r\n        <Search submitSearch={submitSearch}></Search>\r\n        <NavTitle title={title}></NavTitle>\r\n      </div>\r\n      <NavItems desktopOnly={true}/>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './Backdrop.scss';\r\n\r\nconst backdrop = (props) => (\r\n  props.show ? <div className={'Backdrop'} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavItems from '../Navbar/NavItems/NavItems';\r\nimport './SideDrawer.scss';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\n\r\nconst sideDrawer = (props) => {\r\n  let attachedClasses = ['SideDrawer', 'Closed'];\r\n  if (props.open) {\r\n    attachedClasses = ['SideDrawer', 'Open'];\r\n  }\r\n  return(\r\n    <div>\r\n      <Backdrop show={props.open} clicked={props.closed}/>\r\n      <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n        <div className={'LogoSideDrawer'}>\r\n          <Logo />\r\n        </div>\r\n          <nav>\r\n            <NavItems />\r\n          </nav>\r\n      </div>\r\n    </div>\r\n   \r\n\r\n  );\r\n}\r\n\r\nexport default sideDrawer;","import { useEffect, useRef, useReducer} from 'react';\r\n//Converts milliseconds to minutes and seconds\r\nexport const millisToMinutesAndSeconds = (millis) => {\r\n  var minutes = Math.floor(millis / 60000);\r\n  var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n  return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n}\r\n\r\n//Used to save the value of the previous state\r\nexport const usePrevious = (value) => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\n//Function used in conjuction with the scroll listener\r\nexport const debounce = (func, delay) => {\r\n  let inDebounce;\r\n  return function() {\r\n    clearTimeout(inDebounce);\r\n    inDebounce = setTimeout(() => {\r\n      func.apply(this, arguments);\r\n    }, \r\n    delay);\r\n  }\r\n}\r\n\r\n//Custom hook to retrieve data\r\nexport const fetchSongs = (url) => {\r\n  return fetch(url)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      throw new Error(\"There has been a problem with the server of soundcloud loading the data. Please refresh the page or perform a new search\");\r\n    });\r\n};\r\n\r\nconst updateObject = (oldObject, updatedProperties) => {\r\n  return {\r\n    ...oldObject,\r\n    ...updatedProperties\r\n  }\r\n}\r\n\r\nconst initialState = {\r\n  songs: [],\r\n  input: null,\r\n  nextUrl: null,\r\n  selectedSong: null,\r\n  nextSong: null,\r\n  previousSong: null\r\n}\r\n\r\nconst reproductionListReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'MAIN_PAGE_LOAD':\r\n      return updateObject(state, {songs: action.songs})\r\n    case 'SEARCH_SONGS':\r\n      return updateObject(state, {songs: action.songs, input: action.input, nextUrl: action.nextUrl})\r\n    case 'LOAD_MORE_SONGS':\r\n      return updateObject(state, {songs: state.songs.concat(action.songs), nextUrl: action.nextUrl})\r\n    case 'SELECT_SONG':\r\n      console.log('selected song')\r\n      const selectedSongIndex = state.songs.indexOf(action.selectedSong)\r\n      return updateObject(state, {selectedSong: action.selectedSong, nextSong: state.songs[selectedSongIndex + 1], previousSong: state.songs[selectedSongIndex - 1] })\r\n    default:\r\n      throw new Error(`Action ${action.type} does not exist`)\r\n  }\r\n}\r\n\r\nexport const useReproductionList = () => {\r\n  const [state, dispatch] = useReducer(reproductionListReducer, initialState)\r\n  \r\n  return [state.songs, state.nextUrl, state.selectedSong, state.nextSong, state.previousSong, dispatch]\r\n}\r\n","import React from 'react';\r\nimport playIcon from '../../../assets/play.svg';\r\nimport pauseIcon from '../../../assets/pause.svg';\r\nimport './ControlIcon.scss';\r\n\r\n\r\nconst ControlIcon = (props) =>{\r\n\r\n  const callAll = (...fns) => (...args) => fns.forEach(fn => fn && fn(...args))\r\n\r\n  let icon = !props.playIcon ? (\r\n    <img\r\n      className={props.class}\r\n      src={playIcon}\r\n      alt=\"Play song\"\r\n      onClick={callAll(props.playSong)}\r\n    ></img>\r\n  ) : (\r\n    <img\r\n      className={props.class}\r\n      src={pauseIcon}\r\n      alt=\"Pause song\"\r\n      onClick={callAll(props.pauseSong)}\r\n    ></img>\r\n  );\r\n\r\n  return (\r\n    icon\r\n  )\r\n}\r\n\r\nexport default ControlIcon;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { millisToMinutesAndSeconds } from '../../../util/utility';\r\nimport ControlIcon from '../../UI/ControlIcon/ControlIcon';\r\nimport './SongMedia.scss';\r\n\r\nconst SongMedia = props => {\r\nconst [active, setActive] = useState(false)\r\nconst {highlightSong, track} = props;\r\n\r\n    useEffect(()=>{\r\n      if(props.selectedSong && props.selectedSong.id === track.id){\r\n        highlightSong(true)\r\n        setActive(true)\r\n      } else {\r\n        highlightSong(false)\r\n        setActive(false)\r\n      }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    },[highlightSong, props.selectedSong, track])\r\n \r\n    const controlIcon = (\r\n      <ControlIcon\r\n        class={\"PlayIcon\"}\r\n        playSong={props.playSong}\r\n        pauseSong={props.pauseSong}\r\n        playIcon={active && props.isPlaying}\r\n      />\r\n    );\r\n \r\n \r\n    return (\r\n      <div className={\"SongMedia\"}>\r\n        <div className={\"SongTitleMedia\"}>{track.title}</div>\r\n        <div className={\"SongArtistMedia\"}>{track.user.username}</div>\r\n        <div className={\"SongControls\"}>\r\n          <div className={\"SongPlay\"}>{controlIcon}</div>\r\n          <div className={\"SongDuration\"}>\r\n            {millisToMinutesAndSeconds(track.duration)}\r\n          </div>\r\n          <div className={\"SongGenre\"}>{track.genre}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default SongMedia","import React, {useRef} from 'react';\r\nimport './Song.scss';\r\nimport SongMedia from './SongMedia/SongMedia';\r\nimport { gsap } from 'gsap';\r\nimport default_artwork from '../../assets/default_artwork.png';\r\n\r\nconst Song = props => {\r\n  \r\n  const highlightedSong = useRef();\r\n\r\n  //image construction\r\n  let songImage = null\r\n  props.track.artwork_url ? songImage = props.track.artwork_url : songImage = props.track.user.avatar_url\r\n  songImage = songImage.replace(\"-large\", \"-t500x500\");\r\n  //If track does not have artwork or avatar\r\n  if (songImage.includes('default_avatar_large.png')) {\r\n    songImage = default_artwork;\r\n  }\r\n\r\n  //function to manage a border outside the song card \r\n  const highlightSong = (value) => {\r\n    if (value) {\r\n      return gsap.to(highlightedSong.current, {\r\n        outline: \"5px double rgba(249, 105, 0, 0.3)\",\r\n        boxShadow: \"0 15px 15px rgba(0, 0, 0, 0.6)\",\r\n        scale: \"0.9\",\r\n        force3D: false,\r\n        duration: 0.2,\r\n      });\r\n    }\r\n    gsap.to(highlightedSong.current, {\r\n      outline: \"none\",\r\n      boxShadow: \"none\",\r\n      scale: \"1\",\r\n      duration: 0.2,\r\n    });\r\n  }\r\n\r\n  const playSongHandler = () => {\r\n    props.playSong(props.track)\r\n  }\r\n  \r\n\r\n  return (\r\n    <div ref={highlightedSong} className={\"Song\"}>\r\n      <SongMedia\r\n        track={props.track}\r\n        highlightSong={(value) => highlightSong(value)}\r\n        playSong={playSongHandler}\r\n        pauseSong={props.pauseSong}\r\n        selectedSong={props.selectedSong}\r\n        isPlaying={props.isPlaying}\r\n      />\r\n      <img className={\"SongImage\"} src={songImage} alt=\"Not found\"></img>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Song;","import React from 'react';\r\nimport './Spinner.scss';\r\n\r\nconst spinner = () => {\r\n  return <div className={'Loader'}>Loading...</div>\r\n}\r\n\r\nexport default spinner;","const CLIENT_ID = '1512fb9cbe8228095fe92c6503e3a071';\r\nconst TRACKS_BASE_URL = 'https://api.soundcloud.com/tracks';\r\n\r\nexport const MAX_SONGS_PER_PAGE = 20; //The API returns 1 object less than the value passed as a limit\r\nexport const CLIENT_ID_QUERY = '?client_id=' + CLIENT_ID;\r\nexport const DEFAULT_SEARCH = TRACKS_BASE_URL + CLIENT_ID_QUERY + '&limit=' + MAX_SONGS_PER_PAGE + '&linked_partitioning=1&q=';\r\n\r\nexport const DEFAULT_INITIAL_SEARCH = TRACKS_BASE_URL + CLIENT_ID_QUERY +'&limit=20&offset=0&linked_partitioning=1&app_locale=en';\r\n","import React from 'react'\r\nimport './ProgressBar.scss';\r\n\r\n\r\nconst ProgressBar = ({ songDuration, currentTime, onProgressBarChange }) => {\r\n  const [currentPercentage, setCurrentPercentage] = React.useState();\r\n\r\n  const onPogressBarClickedHandle = (event) => {\r\n    const newCurrentTime =\r\n      (event.clientX * (songDuration / 1000)) / event.target.offsetWidth;\r\n    onProgressBarChange(newCurrentTime);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setCurrentPercentage(\r\n      ((currentTime * 1000 * 100) / songDuration).toFixed(2)\r\n    );\r\n  }, [currentTime, songDuration]);\r\n\r\n  return (\r\n    <div\r\n      className={\"ProgressBar\"}\r\n      onClick={(e) => onPogressBarClickedHandle(e)}\r\n    >\r\n      <div className={\"TimeBar\"} style={{ width: currentPercentage + \"%\" }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;","import React from 'react'\r\nimport { millisToMinutesAndSeconds } from '../../../util/utility';\r\nimport './Timer.scss';\r\n\r\nconst Timer = ({currentTime, songDuration}) => {\r\n  return (\r\n  <div className={\"PlayerDuration\"}>\r\n    {millisToMinutesAndSeconds(currentTime * 1000) +\r\n      \" / \" +\r\n      millisToMinutesAndSeconds(songDuration)}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Timer","import React, {useEffect, useRef, useState} from 'react';\r\nimport seekIcon from '../../assets/rewind.svg';\r\nimport ControlIcon from '../UI/ControlIcon/ControlIcon';\r\nimport gsap from 'gsap';\r\nimport './Player.scss';\r\nimport { CLIENT_ID_QUERY } from '../../config/config';\r\nimport ProgressBar from './ProgressBar/ProgressBar';\r\nimport Timer from './Timer/Timer'\r\n\r\nconst Player = props =>{\r\n    const player = useRef();\r\n    const [audio] = useState(new Audio())\r\n    const [timer, setTimer] = useState(null)\r\n    const [currentTime, setCurrentTime] = useState(null)\r\n    const [volumeLevel, setVolumeLevel] = useState(0.15)\r\n\r\n    gsap.to(player.current, {y:0, duration: 3});\r\n\r\n    audio.onended = () => {\r\n      props.playSong(props.nextSong)\r\n    }\r\n\r\n    useEffect(()=>{\r\n      audio.volume = volumeLevel\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps \r\n    },[volumeLevel])\r\n\r\n    useEffect(()=> {\r\n      if(props.isPlaying){\r\n        setTimer(setInterval(()=>{\r\n          //This timer dispatches the actual time of the song each 200ms\r\n          setCurrentTime(audio.currentTime)\r\n        }, 200));\r\n      } else {\r\n        clearInterval(timer)\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps \r\n    },[props.isPlaying])\r\n\r\n    useEffect(() => {\r\n      const wasPlaying = !audio.paused || audio.ended\r\n      audio.src = props.selectedSong.stream_url + CLIENT_ID_QUERY\r\n      audio.load()\r\n      if(wasPlaying){\r\n        audio.play()\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps \r\n    },[props.selectedSong])\r\n\r\n    useEffect(() => {\r\n      if(!props.isPlaying){\r\n        audio.pause()\r\n      } else {\r\n        audio.play()\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps \r\n    },[props.isPlaying])\r\n\r\n    const onProgressBarChange = React.useCallback((newCurrentTime) => {\r\n      audio.currentTime = newCurrentTime\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps \r\n    },[])\r\n\r\n\r\n    const controlIcon = (\r\n      <ControlIcon\r\n        class={\"PlayerIcon\"}\r\n        playSong={() => props.playSong(null)}\r\n        pauseSong={props.pauseSong}\r\n        playIcon={props.isPlaying}\r\n      />\r\n    );\r\n \r\n    return (\r\n      <div className={\"Player\"} ref={player}>\r\n        <ProgressBar\r\n          songDuration={props.selectedSong.duration}\r\n          currentTime={currentTime}\r\n          darkmode={props.darkmode}\r\n          onProgressBarChange={onProgressBarChange}\r\n        />\r\n        <div className={\"PlayerControls\"}>\r\n          <div className={\"PlayerPlay\"}>\r\n            <img\r\n              className={\"PreviousIcon\"}\r\n              src={seekIcon}\r\n              alt=\"Previous song\"\r\n              onClick={() => props.playSong(props.previousSong)}\r\n            ></img>\r\n            {controlIcon}\r\n            <img\r\n              className={\"NextIcon\"}\r\n              src={seekIcon}\r\n              alt=\"Next song\"\r\n              onClick={() => props.playSong(props.nextSong)}\r\n            ></img>\r\n          </div>\r\n\r\n          <div className={\"SongData\"}>\r\n            <div className={\"SongTitle\"}>{props.selectedSong.title}</div>\r\n            <div className={\"SongArtist\"}>\r\n              {props.selectedSong.user.username}\r\n            </div>\r\n          </div>\r\n          <Timer\r\n            currentTime={currentTime}\r\n            songDuration={props.selectedSong.duration}\r\n          />\r\n          <div className={\"PlayerVolume\"}>\r\n            <input\r\n              className={\"VolumeBar\"}\r\n              type=\"range\"\r\n              step=\"1\"\r\n              min=\"1\"\r\n              max=\"100\"\r\n              value={volumeLevel * 100}\r\n              onChange={(e) => setVolumeLevel(e.target.value / 100)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    \r\n}\r\n\r\nexport default Player;","import React, { useState, useEffect, useRef, useLayoutEffect, useContext} from 'react';\r\nimport Song from '../../Components/Song/Song';\r\nimport Spinner from '../../Components/UI/Spinner/Spinner';\r\nimport { debounce, fetchSongs, usePrevious, useReproductionList } from '../../util/utility';\r\nimport { gsap } from 'gsap';\r\nimport './SongList.scss';\r\nimport Player from '../../Components/Player/Player'\r\nimport { DEFAULT_INITIAL_SEARCH, DEFAULT_SEARCH } from '../../config/config';\r\nimport {ContextData} from '../../context/providers'\r\n\r\n\r\nconst SongList = ({handleError}) => {\r\n  \r\n  const [bottom, setBottom] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [isPlaying, setIsPlaying] = useState(false)\r\n  const [input] = useContext(ContextData)\r\n  const [reproductionList, nextUrl, selectedSong, nextSong, previousSong, dispatch] = useReproductionList() \r\n\r\n  let previousReproductionList = usePrevious(reproductionList)\r\n  const songCardList = useRef([]);\r\n\r\n  const playSongHandler = React.useCallback((track) => {\r\n    if(track){\r\n      if(track.id !== selectedSong?.id){\r\n        dispatch({type:'SELECT_SONG', selectedSong: track})\r\n      }\r\n    }\r\n    setIsPlaying(true)\r\n  },[selectedSong, dispatch])\r\n\r\n  const pauseSongHandler = React.useCallback(() => {\r\n    setIsPlaying(false)\r\n  },[])\r\n\r\n  //Executes only the first time the component is mounted\r\n  useEffect(() =>{\r\n    //First song list loaded using parameters in config.js\r\n    fetchSongs(DEFAULT_INITIAL_SEARCH)\r\n      .then(data => { \r\n        dispatch({type: 'MAIN_PAGE_LOAD', songs: data.collection})\r\n      })\r\n      .catch(error => handleError())\r\n    //Event listener loaded to the scroll\r\n    window.addEventListener('scroll', debounce(listenToScroll, 500));\r\n    setLoading(true);\r\n    return () => window.removeEventListener('scroll', listenToScroll);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps  \r\n  },[]);\r\n\r\n  //Executes when a search has been performed\r\n  useEffect(()=>{\r\n    if(input !== null){\r\n      fetchSongs(DEFAULT_SEARCH + input)\r\n        .then(data => {\r\n          dispatch({type: 'SEARCH_SONGS', songs: data.collection, input: input, nextUrl: data.next_href})\r\n        })\r\n        .catch(error => handleError())\r\n    }\r\n    return () => dispatch({type: 'SEARCH_SONGS', songs: [], input: null, nextUrl: null})\r\n    \r\n  },[input, dispatch, handleError])\r\n\r\n   //Executes when there was a search and the user is at the bottom of the page\r\n   useEffect(() => {\r\n    if(bottom && input !== null){\r\n      fetchSongs(nextUrl)\r\n        .then(data => dispatch({type: 'LOAD_MORE_SONGS', songs: data.collection, nextUrl: data.next_href}))\r\n        .catch(error => handleError())\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps \r\n  },[input, bottom, dispatch])\r\n\r\n \r\n  //Animation for the songcards\r\n  useLayoutEffect(() => {\r\n    if (reproductionList?.length > 0) {\r\n      setTimeout(() => {\r\n        //Filters all new loaded songs\r\n        reproductionList.filter((item, index)=>{\r\n          return reproductionList[index] !== previousReproductionList[index]\r\n        }).forEach((item, index) => {\r\n          //Animate each new songcard using his corresponding index reference\r\n            gsap.to(songCardList.current[index + previousReproductionList.length], {\r\n              duration: 1,\r\n              opacity: 1,\r\n              delay: index/3,\r\n            });\r\n        });\r\n      }, 500);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [reproductionList]);\r\n\r\n  //Scroll listener\r\n  const listenToScroll = () => {\r\n    const winScroll = document.body.scrollTop || document.documentElement.scrollTop\r\n    const height = document.documentElement.scrollHeight - document.documentElement.clientHeight\r\n    const scrolled = winScroll / height\r\n    //When the value of scrolled is greater than 0.85 means that the user is at the bottom of the page\r\n    if(scrolled > 0.85){\r\n      setBottom(true)\r\n\r\n    } else {\r\n      setBottom(false)\r\n    \r\n    }\r\n  }\r\n\r\n  let player = selectedSong ? (\r\n    <Player\r\n      isPlaying={isPlaying}\r\n      selectedSong={selectedSong}\r\n      nextSong={nextSong}\r\n      previousSong={previousSong}\r\n      playSong={playSongHandler}\r\n      pauseSong={pauseSongHandler}\r\n    />\r\n  ) : null;\r\n\r\n  let spinner = null;\r\n  if(loading){ \r\n    spinner = <Spinner /> \r\n  }else{\r\n    spinner = null\r\n  } \r\n\r\n    return (\r\n      <div className={\"SongList\"}>\r\n        <div className={\"SongCollection\"}>\r\n          {reproductionList?.length\r\n            ? reproductionList.map((song, index) => {\r\n                return (\r\n                  <div\r\n                    key={song.id}\r\n                    className={\"Card\"}\r\n                    ref={(element) => (songCardList.current[index] = element)}\r\n                  >\r\n                    <Song\r\n                      playSong={playSongHandler}\r\n                      pauseSong={pauseSongHandler}\r\n                      track={song}\r\n                      selectedSong={selectedSong}\r\n                      isPlaying={isPlaying}\r\n                    />\r\n                  </div>\r\n                )\r\n              })\r\n            : spinner}\r\n        </div>\r\n        {player}\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default SongList;\r\n\r\n","import React from 'react';\r\nimport './Modal.scss';\r\nimport Aux from '../../../hoc/Auxiliar/Auxiliar';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nconst modal = (props) => (\r\n\r\n<Aux>\r\n  <Backdrop show={props.show} clicked={props.modalClosed}/>\r\n  <div \r\n    className={'Modal'}\r\n    style={{transform: props.show ? 'translate(-50%, 0)' : 'translate(-50%, -200vh)',\r\n    opacity: props.show ? '1' : '0'}}>\r\n      {props.children}\r\n  </div>\r\n</Aux>\r\n\r\n)\r\n\r\nexport default modal; ","import React from 'react';\r\nimport './Button.scss';\r\n\r\n\r\nconst button = (props) => (\r\n  <button onClick={props.clicked} className={['Button', [props.btnType]].join(' ')}>{props.children}</button>\r\n);\r\n\r\nexport default button;","import React, { useState } from 'react';\nimport Navbar from './Components/Navigation/Navbar/Navbar';\nimport SideDrawer from './Components/Navigation/SideDrawer/SideDrawer';\nimport SongList from './Containers/SongList/SongList';\nimport Modal from './Components/UI/Modal/Modal';\nimport Button from './Components/UI/Button/Button';\n\n\nconst App = (props) => {\n  const [toggleDrawer, setToggleDrawer] = useState(false);\n  const [error, setError] = useState(false);\n\n  const sideDrawerToggleHandler = () => {\n    setToggleDrawer((toggleDrawer) => !toggleDrawer);\n  };\n\n  const sideDrawerClosedHandler = () => {\n    setToggleDrawer(false);\n  };\n\n  const handleError = () => {\n    setError(true)\n  }\n\n  const errorMessage = (\n    <div>\n      <h1>\n        There has been a problem with the server connection. Please try\n        reloading the page or perform a new search.\n      </h1>\n      <Button btnType=\"Primary\" clicked={() => window.location.reload(false)}>\n        Reload Page\n      </Button>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <Modal\n        show={error}\n        modalClosed={() => props.onErrorMessageClosed()}\n      >\n        {errorMessage}\n      </Modal>\n      <Navbar toggleDrawer={sideDrawerToggleHandler} />\n      <SideDrawer open={toggleDrawer} closed={sideDrawerClosedHandler} />\n      <SongList handleError={handleError}/>\n    </div>\n  );\n};\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport StateProvider from './context/providers'\n\nReactDOM.render(\n  <React.StrictMode>\n      <StateProvider>\n        <App />\n      </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}